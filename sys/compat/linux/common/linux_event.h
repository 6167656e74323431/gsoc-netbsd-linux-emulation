/*-
 * Copyright (c) 2007 Roman Divacky
 * Copyright (c) 2014 Dmitry Chagin <dchagin@FreeBSD.org>
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD$
 */

#ifndef _LINUX_EVENT_H
#define	_LINUX_EVENT_H

#define	LINUX_EPOLLIN		0x001
#define	LINUX_EPOLLPRI		0x002
#define	LINUX_EPOLLOUT		0x004
#define	LINUX_EPOLLRDNORM	0x040
#define	LINUX_EPOLLRDBAND	0x080
#define	LINUX_EPOLLWRNORM	0x100
#define	LINUX_EPOLLWRBAND	0x200
#define	LINUX_EPOLLMSG		0x400
#define	LINUX_EPOLLERR		0x008
#define	LINUX_EPOLLHUP		0x010
#define	LINUX_EPOLLRDHUP	0x2000
#define	LINUX_EPOLLWAKEUP	1u<<29
#define	LINUX_EPOLLONESHOT	1u<<30
#define	LINUX_EPOLLET		1u<<31

#define	LINUX_EPOLL_EVRD	(LINUX_EPOLLIN|LINUX_EPOLLRDNORM)
#define	LINUX_EPOLL_EVWR	(LINUX_EPOLLOUT|LINUX_EPOLLWRNORM)
#define	LINUX_EPOLL_EVSUP	(LINUX_EPOLLET|LINUX_EPOLLONESHOT	\
		|LINUX_EPOLLHUP|LINUX_EPOLLERR|LINUX_EPOLLPRI		\
		|LINUX_EPOLL_EVRD|LINUX_EPOLL_EVWR|LINUX_EPOLLRDHUP)

#define	LINUX_EPOLL_CTL_ADD	1
#define	LINUX_EPOLL_CTL_DEL	2
#define	LINUX_EPOLL_CTL_MOD	3

typedef uint64_t	epoll_udata_t;

struct linux_epoll_event {
	uint32_t	events;
	epoll_udata_t	data;
}
#if defined(__amd64__)
__attribute__((packed))
#endif
;

#define LINUX_IN_CLOEXEC	LINUX_O_CLOEXEC
#define LINUX_IN_NONBLOCK	LINUX_O_NONBLOCK

#define LINUX_IN_ALL_FLAGS	(LINUX_IN_CLOEXEC|LINUX_IN_NONBLOCK)

#define LINUX_IN_ACCESS		0x00000001
#define LINUX_IN_MODIFY		0x00000002
#define LINUX_IN_ATTRIB		0x00000004
#define LINUX_IN_CLOSE_WRITE	0x00000008
#define LINUX_IN_CLOSE_NOWRITE	0x00000010
#define LINUX_IN_OPEN		0x00000020
#define LINUX_IN_MOVED_FROM	0x00000040
#define LINUX_IN_MOVED_TO	0x00000080
#define LINUX_IN_CREATE		0x00000100
#define LINUX_IN_DELETE		0x00000200
#define LINUX_IN_DELETE_SELF	0x00000400
#define LINUX_IN_MOVE_SELF	0x00000800
#define LINUX_IN_UNMOUNT	0x00002000
#define LINUX_IN_Q_OVERFLOW	0x00004000
#define LINUX_IN_IGNORED	0x00008000

#define LINUX_IN_ONLYDIR	0x01000000
#define LINUX_IN_DONT_FOLLOW	0x02000000
#define LINUX_IN_EXCL_UNLINK	0x04000000
#define LINUX_IN_MASK_CREATE	0x10000000
#define LINUX_IN_MASK_ADD	0x20000000
#define LINUX_IN_ISDIR		0x40000000
#define LINUX_IN_ONESHOT	0x80000000

#define LINUX_IN_ADD_KNOWN	(LINUX_IN_ACCESS|LINUX_IN_ATTRIB \
				|LINUX_IN_CLOSE_WRITE|LINUX_IN_CLOSE_NOWRITE \
				|LINUX_IN_CREATE|LINUX_IN_DELETE \
				|LINUX_IN_DELETE_SELF|LINUX_IN_MODIFY \
				|LINUX_IN_MOVE_SELF|LINUX_IN_MOVED_FROM \
				|LINUX_IN_MOVED_TO|LINUX_IN_OPEN \
				|LINUX_IN_DONT_FOLLOW|LINUX_IN_ONLYDIR)

#define LINUX_NAME_MAX		255
				
struct linux_inotify_event {
	int32_t		wd;
	uint32_t	mask;
	uint32_t	cookie;
	uint32_t	len;
	char		name[];
};

int linux_event_init(void);
int linux_event_fini(void);

#endif	/* !_LINUX_EVENT_H */
